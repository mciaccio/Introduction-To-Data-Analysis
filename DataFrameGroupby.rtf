{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red128\green0\blue0;\red0\green170\blue0;
\red0\green0\blue0;}
\margl1440\margr1440\vieww20540\viewh11080\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf0 \
\
# groupby how to keep a column name - \cf2 as_index=False\cf0 \
\
# Example - create, instantiate, populate Pandas DataFrame,\
	NumPy array -> Pandas DataFrame, with index \
values = np.array([\cf3 1\cf0 , \cf3 3\cf0 , \cf3 2\cf0 , \cf3 4\cf0 , \cf3 1\cf0 , \cf3 6\cf0 , \cf3 4\cf0 ])\
example_df = pd.DataFrame(\{\
    \cf4 'value'\cf0 : values,\
    \cf4 'even'\cf0 : values % \cf3 2\cf0  == \cf3 0\cf0 ,	# True or False \
    \cf4 'above_three'\cf0 : values > \cf3 3	\cf0 # True or False \
\}, index=[\cf4 'a'\cf0 , \cf4 'b'\cf0 , \cf4 'c'\cf0 , \cf4 'd'\cf0 , \cf4 'e'\cf0 , \cf4 'f'\cf0 , \cf4 'g'\cf0 ])\
***\
example_df -> \
  above_three   even  value\
a       False  False      1\
b       False  False      3\
c       False   True      2\
d        True   True      4\
e       False  False      1\
f        True   True      6\
g        True   True      4\
***\
\
example_dfGroupbyEven = example_df.groupby('even')\
In the original DataFrame only two values in the boolean even column, True and False \
***\
print(example_dfGroupbyEven.groups) # groupby some help\
    # \{False: ['a', 'b', 'e'], True: ['c', 'd', 'f', 'g']\}\
***\
list(example_dfGroupbyEven) -> \
[(\
False,\
		above_three	even	value\
a		False			False	1\
b		False  		False	3\
e		False			False	1), (\
True	above_three	even	value\
c		False			True	2\
d		True			True	4\
f		True			True	6\
g		True			True	4\
)]\
***\
\
first_even = example_df.groupby('even').\cf2 first\cf0 ()\
*** type - DataFrame  \
first_even -> \
		above_three	value *** even column heading not here, \cf2 as_index=False\cf5  NOT USED\cf0  ***\
even                    \
False	False			1\
True	False			2\
\
looking back at the example_dfGroupbyEven object (list)\
The first False	value is 1 - above_three - False\
The first True	value is 2 - above_three - False \
***\
first_even1 = example_df.groupby('even', \cf2 as_index=False\cf0 ).first()  \
first_even1 -> \
	\cf2 even\cf0 	above_three	value *** bid deal \'91even\'92 is STILL a column name ***\
0	False	False			1\
1	True	False			2\
  \
\
\
\
\
\
\
\
\
\
\
\
}