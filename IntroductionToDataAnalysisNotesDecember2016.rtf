{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww19580\viewh8500\viewkind0
\deftab720
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
\ul doff Notes\ulnone \
Note: In order to get the proper computations, we should actually be setting the value of the "ddof" parameter to 0 in the .std() function.\
Note that the type of standard deviation calculated by default is different between numpy's .std() and pandas' .std() functions. By default, numpy calculates a population standard deviation, with "ddof = 0". On the other hand, pandas calculates a sample standard deviation, with "ddof = 1". If we know all of the scores, then we have a population - so to standardize using pandas, we need to set "ddof = 0".\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf0 \outl0\strokewidth0 axis = 'rows', 'index', '0'
\fs20 \

\fs36 axis = 'columns', '1'\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec2 \
}